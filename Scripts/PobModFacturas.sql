# POBLAMOS EL MODELO DE FACTURAS
# Carga Inicial:
USE ODS;

INSERT INTO ODS.ODS_DM_METODOS_PAGO VALUES (-98, 'NO APLICA', NOW(), NOW());
INSERT INTO ODS.ODS_DM_METODOS_PAGO VALUES (-99, 'DESCONOCIDO', NOW(), NOW());
COMMIT;
ANALYZE TABLE ODS_DM_METODOS_PAGO;

INSERT INTO ODS.ODS_DM_CICLOS_FACTURACION VALUES (-98, 'NO APLICA', NOW(), NOW());
INSERT INTO ODS.ODS_DM_CICLOS_FACTURACION VALUES (-99, 'DESCONOCIDO', NOW(), NOW());
COMMIT;
ANALYZE TABLE ODS.DM_CICLOS_FACTURACION;

# Actualizaciones periodicas
INSERT INTO ODS.ODS_DM_METODOS_PAGO (DE_METODO_PAGO, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(STG_FACTURAS_FCT.BILL_METHOD)), NOW(), NOW()  
FROM STAGE.STG_FACTURAS_FCT 
	LEFT OUTER JOIN ODS.ODS_DM_METODOS_PAGO
		ON UPPER(TRIM(STG_FACTURAS_FCT.BILL_METHOD)) = UPPER(TRIM(ODS.ODS_DM_METODOS_PAGO.DE_METODO_PAGO))
WHERE STAGE.STG_FACTURAS_FCT.BILL_METHOD IS NOT NULL 
	AND ODS.ODS_DM_METODOS_PAGO.DE_METODO_PAGO IS NULL;
COMMIT;

INSERT INTO ODS.ODS_DM_CICLOS_FACTURACION (DE_CICLO_FACTURACION, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(STG_FACTURAS_FCT.BILL_CYCLE)), NOW(), NOW()  
FROM STAGE.STG_FACTURAS_FCT 
	LEFT OUTER JOIN ODS.ODS_DM_CICLOS_FACTURACION
		ON UPPER(TRIM(STG_FACTURAS_FCT.BILL_METHOD)) = UPPER(TRIM(ODS.ODS_DM_CICLOS_FACTURACION.DE_CICLO_FACTURACION))
WHERE STAGE.STG_FACTURAS_FCT.BILL_METHOD IS NOT NULL 
	AND ODS.ODS_DM_CICLOS_FACTURACION.DE_CICLO_FACTURACION IS NULL;
COMMIT;

INSERT INTO ODS.ODS_HC_FACTURAS 
(ID_FACTURA,
 ID_CLIENTE
, FC_INICIO
, FC_FIN
, FC_ESTADO
, FC_PAGO
, ID_CICLO_FACTURACION
, ID_METODO_PAGO
, CANTIDAD
, FC_INSERT
, FC_MODIFICACION)
SELECT DISTINCT FACT.BILL_REF_NO
, FACT.CUSTOMER_ID
, CASE WHEN LENGTH(TRIM(FACT.START_DATE))<>0 THEN STR_TO_DATE(DATE_FORMAT(FACT.START_DATE,'%d/%m/%Y'),'%d/%m/%Y') ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END AS FC_INICIO
, CASE WHEN LENGTH(TRIM(FACT.END_DATE))<>0 THEN STR_TO_DATE(DATE_FORMAT(FACT.END_DATE,'%d/%m/%Y'),'%d/%m/%Y')  ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END AS FC_FIN
, CASE WHEN LENGTH(TRIM(FACT.STATEMENT_DATE))<>0 THEN STR_TO_DATE(DATE_FORMAT(FACT.STATEMENT_DATE,'%d/%m/%Y'),'%d/%m/%Y')  ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END AS FC_ESTADO
, CASE WHEN LENGTH(TRIM(FACT.PAYMENT_DATE))<>0 THEN STR_TO_DATE(DATE_FORMAT(FACT.PAYMENT_DATE,'%d/%m/%Y'),'%d/%m/%Y')  ELSE STR_TO_DATE('31/12/9999','%d/%m/%Y') END AS FC_PAGO
, CICLOS.ID_CICLO_FACTURACION
, FACT.AMOUNT
, METODOS.ID_METODO_PAGO
, NOW()
, NOW()
FROM STAGE.STG_FACTURAS_FCT AS FACT
	LEFT OUTER JOIN ODS.ODS_HC_FACTURAS ON 
		UPPER(TRIM(FACT.BILL_REF_NO)) = UPPER(TRIM(ODS.ODS_HC_FACTURAS.ID_FACTURA))
    INNER JOIN ODS.ODS_DM_CICLOS_FACTURACION AS CICLOS ON 
		CASE WHEN LENGTH(TRIM(FACT.BILL_CYCLE))<>0 THEN UPPER(TRIM(FACT.BILL_CYCLE)) ELSE 'DESCONOCIDO' END = CICLOS.DE_CICLO_FACTURACION
	INNER JOIN ODS.ODS_DM_METODOS_PAGO AS METODOS ON  
		CASE WHEN LENGTH(TRIM(FACT.BILL_METHOD))<>0 THEN UPPER(TRIM(FACT.BILL_METHOD)) ELSE 'DESCONOCIDO' END = METODOS.DE_METODO_PAGO      
WHERE FACT.BILL_REF_NO IS NOT NULL 
	AND ODS.ODS_HC_FACTURAS.ID_FACTURA IS NULL;
COMMIT;
ANALYZE TABLE ODS.ODS_HC_FACTURAS;

